<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:SystemForAll.Global">
    
    
    
    <!--Basic-->
    <Style x:Key ="BasicControlStyle">
        <Setter Property = "Control.FontSize" Value ="14"/>
        <Setter Property = "Control.Height" Value = "40"/>
        <Setter Property = "Control.Cursor" Value = "Hand"/>
    </Style>

    <!--Buttons-->
    <Style x:Key ="BigGreenButton" TargetType="Button">
        <Setter Property = "FontSize" Value ="20"/>
        <Setter Property = "Height" Value = "100"/>
        <Setter Property = "Width" Value = "100"/>
        <Setter Property = "Background" Value = "DarkGreen"/>
        <Setter Property = "Foreground" Value = "Yellow"/>
    </Style>

    <Style x:Key ="TiltButton" TargetType="Button" BasedOn = "{StaticResource BigGreenButton}">
        <Setter Property = "Foreground" Value = "White"/>
        <Setter Property = "RenderTransform">
            <Setter.Value>
                <RotateTransform Angle = "20"/>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key = "GrowingButtonStyle" TargetType="Button">
        <Setter Property = "Height" Value = "40"/>
        <Setter Property = "Width" Value = "100"/>
        <Style.Triggers>
            <Trigger Property = "IsMouseOver" Value = "True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard TargetProperty = "Height">
                            <DoubleAnimation From = "40" To = "200" Duration = "0:0:2" AutoReverse="True"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!--TextBox-->
    <Style x:Key="TextBoxStyle" TargetType="TextBox">
        <Setter Property = "FontSize" Value ="14"/>
        <Setter Property = "Width" Value = "100"/>
        <Setter Property = "Height" Value = "30"/>
        <Setter Property = "BorderThickness" Value = "5"/>
        <Setter Property = "BorderBrush" Value = "Red"/>
        <Setter Property = "FontStyle" Value = "Italic"/>

        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property = "IsFocused" Value = "True"/>
                    <Condition Property = "IsMouseOver" Value = "True"/>
                </MultiTrigger.Conditions>
                <Setter Property = "Background" Value = "Yellow"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type TextBox}">
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="Background" Value="Pink" />
                <Setter Property="Foreground" Value="Black" />
                <Setter Property="ToolTip"
                        Value="{Binding RelativeSource={RelativeSource Self},
                        Path=(Validation.Errors)[0].ErrorContent}"/>
            </Trigger>
        </Style.Triggers>
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <DockPanel LastChildFill="True">
                        <TextBlock Foreground="Red" FontSize="20" Text="!" 
                                       ToolTip="{Binding ElementName=controlWithError,
                            Path=AdornedElement.(Validation.Errors)[0].ErrorContent}"/>
                        <Border BorderBrush="Red" BorderThickness="1">
                            <AdornedElementPlaceholder Name="controlWithError" />
                        </Border>
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- A style containing a template. -->
    <Style x:Key ="RoundButtonStyle" TargetType ="Button">
        <Setter Property ="Foreground" Value ="Black"/>
        <Setter Property ="FontSize" Value ="14"/>
        <Setter Property ="FontWeight" Value ="Bold"/>
        <Setter Property="Width" Value="100"/>
        <Setter Property="Height" Value="100"/>

        <Setter Property ="Template">
            <Setter.Value>
                <ControlTemplate TargetType ="Button">
                    <Grid x:Name="controlLayout">
                        <Ellipse x:Name="buttonSurface" Fill="{TemplateBinding Background}"/>
                        <Label x:Name="buttonCaption" Content ="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property = "IsMouseOver" Value = "True">
                            <Setter TargetName = "buttonSurface" Property = "Fill" Value = "Blue"/>
                            <Setter TargetName = "buttonCaption" Property = "Foreground" Value = "Yellow"/>
                        </Trigger>
                        <Trigger Property = "IsPressed" Value="True">
                            <Setter TargetName="controlLayout" Property="RenderTransformOrigin" Value="0.5,0.5"/>
                            <Setter TargetName="controlLayout" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    

</ResourceDictionary>